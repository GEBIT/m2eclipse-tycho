<catalog>
  <catalogItems>    
    <catalogItem>
      <categoryId>org.eclipse.m2e.discovery.category.lifecycles</categoryId>
      <m2e-versions>1.0,1.1</m2e-versions>
      <description>Tycho Configurator bridges tycho based projects and PDE</description>
      <groupId>lifecycles</groupId>
      <id>org.eclipse.m2e.discovery.lifecycles.tycho</id>
      <kind>lifecycles</kind>
      <license>EPL</license>
      <name>Tycho Configurator</name>
      <provider>Sonatype, Inc.</provider>
      <p2>
        <repositoryUrl>https://repository.sonatype.org/content/repositories/forge-sites/m2eclipse-tycho/0.6.0/N/0.6.0.201112050222/</repositoryUrl>
        <iuId>org.sonatype.tycho.m2e.feature.feature.group</iuId>
        <lifecycleMappingIU>
          <iuId>org.sonatype.tycho.m2e</iuId>
        </lifecycleMappingIU>
      </p2>
      <overview>
        <summary>Tycho is focused on a Maven-centric, manifest-first approach to building Eclipse plug-ins, features, update sites, RCP applications and OSGi bundles. Tycho is a set of Maven plugins and extensions for building Eclipse plugins and OSGi bundles with Maven. Eclipse plugins and OSGi bundles have their own metadata for expressing dependencies, source folder locations, etc. that are normally found in a Maven POM. Tycho uses native metadata for Eclipse plugins and OSGi bundles and uses
          the POM to configure and drive the build. Tycho supports bundles, fragments, features, update site projects and RCP applications. Tycho also knows how to run JUnit test plugins using OSGi runtime and there is also support for sharing build results using Maven artifact repositories. Tycho plugins introduce new packaging types and the corresponding lifecycle bindings that allow Maven to use OSGi and Eclipse metadata during a Maven build. </summary>
        <url>http://eclipse.org/tycho/</url>
      </overview>
    </catalogItem>
  </catalogItems>
</catalog>
